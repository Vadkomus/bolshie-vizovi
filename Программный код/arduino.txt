#include <Servo.h>
#include <SoftwareSerial.h>
#include <AccelStepper.h>
#include <Thread.h>
#include "GyverOLED.h"
#define TX A0
#define RX A1
#define MAX_DICTIONARY_SIZE 10
GyverOLED<SSD1306_128x64, OLED_NO_BUFFER> oled;
String keys[MAX_DICTIONARY_SIZE];
char values[MAX_DICTIONARY_SIZE];
int dictionarySize = 0;
Servo myservo;
int y = 30000;
int cnt = 0;
int count_value = 0;
Thread rasbThread = Thread();
Thread appThread = Thread();
Thread stopedThread = Thread();
Thread chipsThread = Thread();
unsigned long time; 
unsigned long zahvat_cub = 30000;
SoftwareSerial bluetooth(RX, TX);
SoftwareSerial BTSerial(RX, TX);
AccelStepper mostepper(4, 10, 12, 11, 13);
AccelStepper mustepper(4, 6, 8, 7, 9);
AccelStepper mastepper(4, 2, 4, 3, 5);
char incomingByte;
void(* resetFunc) (void) = 0;
int e = 0;
int r = 1;
char* str1;
char* str2;
char* str3;
char* str4;
char* str5;
char* str6;
char* str7;
char* str8;
char* str9;
char* str10;
bool shouldRun;
char commands[10];
char values_raspberry[1];
String keys_raspberry[1];
String num_values[1];
int num = 0;
int t = 0;
void addToDictionary(String key, char value) {
  if (dictionarySize < MAX_DICTIONARY_SIZE) {
    keys[dictionarySize] = key;
    values[dictionarySize] = value;
    dictionarySize++;
  }
}

char getValueFromDictionary(String key) {
  for (int i = 0; i < dictionarySize; i++) {
    if (keys[i] == key) {
      return values[i];
    }
  }
}

void setup() {
  zero(commands);
  addToDictionary("винты", '1');
  addToDictionary("гайки",'2');
  addToDictionary("шайбы",'3');
  addToDictionary("шпильки",'4');
  addToDictionary("подшиники",'5');
  addToDictionary("лин. напр.",'6');
  addToDictionary("валы",'7');
  addToDictionary("двигатели",'8');
  addToDictionary("датчики",'9');
  myservo.attach(A2);
  oled.init();        // инициализация
  oled.clear();       // очистка
  oled.setScale(3);   // масштаб текста
  oled.home();        // курсор в 0,0
  Serial.begin(9600);
  BTSerial.begin(9600);
  str1 = "1";
  str2 = "2";
  str3 = "3";
  str4 = "4";
  str5 = "5";
  str6 = "6";
  str7 = "7";
  str8 = "8";
  str9 = "9";
  str10 ="0";
  chipsThread.onRun(chips);
  chipsThread.setInterval(1000);
  stopedThread.onRun(stoped);
  stopedThread.setInterval(10);
  rasbThread.onRun(raspberry);
  rasbThread.setInterval(10);
  appThread.onRun(app);
  appThread.setInterval(10);
  bluetooth.begin(9600);
  mastepper.setMaxSpeed(300.0);
  mastepper.setAcceleration(100.0);
  mastepper.setSpeed(300);
  mastepper.setCurrentPosition(0);
  
  mostepper.setMaxSpeed(1000.0);
  mostepper.setAcceleration(100.0);
  mostepper.setSpeed(1000);
  mostepper.setCurrentPosition(0);
  
  mustepper.setMaxSpeed(1500.0);
  mustepper.setAcceleration(150.0);
  mustepper.setSpeed(1500);
  mustepper.setCurrentPosition(0);
}

void oled_display(){
    if (num_values[0] != keys_raspberry[0]){
      oled.print(keys_raspberry[0]);
      num_values[0] = keys_raspberry[0];
    }
  }
char perebor(char f[], char value[]){
  int cont = 0;
  for(int g=0; g<9; g++){
    if (f[g] == value[0]){
      f[g] = '0';
      cont= cont+1;
      }
    }
    if (cont > 0){
      return '1';
      }
    else if(cont == 0){
      return '0';
      }
  }
void zero(char list0[]){
    for(int p = 0;p < 11; p++ ){
    list0[p] = '0';
    }
  }

int count_zero(char list1[]){
  int cont = 0;
  for(int c=1; c<11;c++){
    if (list1[c] == '0'){
      cont++;
      }
    }
    return cont;
  }
void loop() {
  if (appThread.shouldRun()){
  appThread.run();
  }
  if (rasbThread.shouldRun()){
    rasbThread.run();
  }
  if (stopedThread.shouldRun()){
    stopedThread.run();
    }
  if (chipsThread.shouldRun()){
    chipsThread.run();
    }
    myservo.write(70);
    
   if (commands[0]=='o' and values_raspberry[0] !='0'){
    unsigned long currentMillis = millis();
    if(currentMillis < 20000){
      oled_display();
        for(int g=0; g<9; g++){
    if (commands[g] == values_raspberry[0]){
      commands[g] = '0';
      mastepper.moveTo(600);
      mastepper.runToPosition();
      myservo.write(70);
      mustepper.moveTo(-800);
      mustepper.runToPosition();
        myservo.write(110);
   mustepper.moveTo(800);
  mustepper.runToPosition();   
    myservo.write(70);
mastepper.moveTo(0);
mastepper.runToPosition();    
      }
    }
    }
if(currentMillis > 20000 and currentMillis < 40000){
mostepper.moveTo(3000);
mostepper.runToPosition();
mostepper.stop();
oled.clear();
oled.home();
}
    if(currentMillis < 60000 and currentMillis > 40000){
      
oled_display();
        for(int g=0; g<9; g++){
    if (commands[g] == values_raspberry[0]){
      commands[g] = '0';
      mastepper.moveTo(600);
      mastepper.runToPosition();
                myservo.write(70);
      mustepper.moveTo(-800);
      mustepper.runToPosition();    
    myservo.write(110);
        mustepper.moveTo(1000);
  mustepper.runToPosition();   
    myservo.write(70);
  mastepper.moveTo(0);
  mastepper.runToPosition();
      }
    }
      }
if(currentMillis < 80000 and currentMillis > 60000){
mostepper.moveTo(6000);
mostepper.runToPosition();
mostepper.stop();
oled.clear(); 
oled.home();
}
     if(currentMillis < 100000 and currentMillis > 80000){
      
oled_display();
        for(int g=0; g<9; g++){
    if (commands[g] == values_raspberry[0]){
      commands[g] = '0';
      mastepper.moveTo(600);
      mastepper.runToPosition();
                myservo.write(70);
      mustepper.moveTo(-800);
      mustepper.runToPosition();    
    myservo.write(110);
  mustepper.moveTo(800);
  mustepper.runToPosition();   
    myservo.write(70);
    mastepper.moveTo(0);
    mustepper.runToPosition(); 
    
      }
    }
   }
   if (currentMillis > 100000 and currentMillis < 120000){
    mastepper.moveTo(3000);
mastepper.runToPosition();
mastepper.stop();
oled.clear();
oled.home();
    }
       if(currentMillis > 120000 and currentMillis < 140000){
      oled_display();
        for(int g=0; g<9; g++){
    if (commands[g] == values_raspberry[0]){
      commands[g] = '0';
      mastepper.moveTo(3400);
      mastepper.runToPosition(); 
          myservo.write(70);
      mustepper.moveTo(-800);
      mustepper.runToPosition();    
    myservo.write(110);
  mustepper.moveTo(800);
  mustepper.runToPosition();   
    myservo.write(70);
    mastepper.moveTo(3000);
    mastepper.runToPosition();
    
      }
    }
    }
if(currentMillis > 140000 and currentMillis < 160000){
mostepper.moveTo(3000);
mostepper.runToPosition();
mostepper.stop();
oled.clear();
oled.home();
}
    if(currentMillis < 180000 and currentMillis > 160000){
      
oled_display();
        for(int g=0; g<9; g++){
    if (commands[g] == values_raspberry[0]){
      commands[g] = '0';
      mastepper.moveTo(3400);
      mastepper.runToPosition();  
                myservo.write(70);
      mustepper.moveTo(-800);
      mustepper.runToPosition();    
    myservo.write(110);
  mustepper.moveTo(800);
  mustepper.runToPosition();   
    myservo.write(70);
     mastepper.moveTo(3000);
    mastepper.runToPosition();  
      }
    }
      }
if(currentMillis < 200000 and currentMillis > 180000){
mostepper.moveTo(0);
mostepper.runToPosition();
mostepper.stop();
oled.clear(); 
oled.home();
}

if (currentMillis > 200000 and currentMillis < 220000){
  oled_display();
        for(int g=0; g<9; g++){
    if (commands[g] == values_raspberry[0]){
      commands[g] = '0';
      mastepper.moveTo(3400);
      mastepper.runToPosition();
                myservo.write(70);
      mustepper.moveTo(-800);
      mustepper.runToPosition();    
    myservo.write(110);
  mustepper.moveTo(800);
  mustepper.runToPosition();   
    myservo.write(70);
    mastepper.moveTo(3000);
    mastepper.runToPosition();
      }
    }
  }
if (currentMillis > 220000 and currentMillis < 240000){
mastepper.moveTo(5800);
mastepper.runToPosition();
mastepper.stop();
oled.clear();
oled.home();
  }
if(currentMillis < 260000 and currentMillis > 240000){
      oled_display();
        for(int g=0; g<9; g++){
    if (commands[g] == values_raspberry[0]){
      commands[g] = '0';
      mastepper.moveTo(6200);
      mastepper.runToPosition();
          myservo.write(70);
      mustepper.moveTo(-800);
      mustepper.runToPosition();    
    myservo.write(110);
  mustepper.moveTo(800);
  mustepper.runToPosition();   
    myservo.write(70);
    mastepper.moveTo(5800);
    mastepper.runToPosition();
      }
    }
    }
if(currentMillis > 260000 and currentMillis < 280000){
mostepper.moveTo(3000);
mostepper.runToPosition();
mostepper.stop();
oled.clear();
oled.home();
}
    if(currentMillis < 300000 and currentMillis > 280000){
      
oled_display();
        for(int g=0; g<9; g++){
    if (commands[g] == values_raspberry[0]){
      commands[g] = '0';
      mastepper.moveTo(6200);
      mastepper.runToPosition();
                myservo.write(70);
      mustepper.moveTo(-800);
      mustepper.runToPosition();    
    myservo.write(110);
  mustepper.moveTo(800);
  mustepper.runToPosition();   
      mastepper.moveTo(5800);
    mastepper.runToPosition();
    myservo.write(70);
      }
    }
      }
if(currentMillis < 320000 and currentMillis > 300000){
mostepper.moveTo(6000);
mostepper.runToPosition();
mostepper.stop();
oled.clear(); 
oled.home();
}

    
}
}


void raspberry(){
     if(Serial.available() > 0){
    String data = Serial.readStringUntil('\n');
    char value = getValueFromDictionary(data);
    values_raspberry[0] = value;
    keys_raspberry[0] = data;
  }
  }
void app(){
  if (bluetooth.available() > 0) {
    char command = bluetooth.read();
    Serial.println(command);
    if(command=='o'){commands[0] = 'o';}
    if(command=='1'){commands[1] = '1';}
    if(command=='2'){commands[2] = '2';}
    if(command=='3'){commands[3] = '3';}
    if(command=='4'){commands[4] = '4';}
    if(command=='5'){commands[5] = '5';}
    if(command=='6'){commands[6] = '6';}
    if(command=='7'){commands[7] = '7';}
    if(command=='8'){commands[8] = '8';}
    if(command=='9'){commands[9] = '9';}
    if(command=='f'){commands[10] = 'f';}
  }
}

void stoped(){
      if (count_zero(commands) == 9) {
      mostepper.moveTo(0);
      mostepper.runToPosition();
      mostepper.stop();

      mastepper.moveTo(0);
      mastepper.runToPosition();
      mastepper.stop();
      oled.clear();
      oled.home();
      }
     if (commands[10] == 'f'){
      mostepper.moveTo(0);
      mostepper.runToPosition();
      mostepper.stop();

      mastepper.moveTo(0);
      mastepper.runToPosition();
      mastepper.stop();
      oled.clear();
      oled.home();
      zero(commands);
      resetFunc();
    }

  }

void chips(){
  if (values_raspberry[0] == '1'){BTSerial.write(str1, strlen(str1));}
  if (values_raspberry[0] == '2'){BTSerial.write(str2, strlen(str2));}
  if (values_raspberry[0] == '3'){BTSerial.write(str3, strlen(str3));}
  if (values_raspberry[0] == '4'){BTSerial.write(str4, strlen(str4));}
  if (values_raspberry[0] == '5'){BTSerial.write(str5, strlen(str5));}
  if (values_raspberry[0] == '6'){BTSerial.write(str6, strlen(str6));}
  if (values_raspberry[0] == '7'){BTSerial.write(str7, strlen(str7));}
  if (values_raspberry[0] == '8'){BTSerial.write(str8, strlen(str8));}
  if (values_raspberry[0] == '9'){BTSerial.write(str9, strlen(str9));}
  }